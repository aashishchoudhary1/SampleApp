name: Deploy simple hello app to GKE1

on:
  push:
    branches:
    - main

env:
  PROJECT_ID: kubernetestutorial-338511
  GKE_CLUSTER: hello-java-cluster    # TODO: update to cluster name
  GKE_ZONE: us-central1-c	   # TODO: update to cluster zone
  DEPLOYMENT_NAME: gke-hello-app # TODO: update deployment name if changed in deployment.yaml
  IMAGE: sample.jar 
jobs:
  setup-and-deploy:
    name: Setup and Deploy
    runs-on: ubuntu-latest

    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
    - run: mvn package -Dmaven.test.skip
    - run: mkdir staging && cp target/*.jar staging
    
    # Configure Workload Identity Federation and generate an access token.
    #- id: 'auth'
    #  name: 'Authenticate to Google Cloud'
    #  uses: 'google-github-actions/auth@v0' 
     # with: 
      #  workload_identity_provider: 'projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider'
     #   service_account: 'mybuildserviceaccount@kubernetestutorial-338511.iam.gserviceaccount.com'
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'


    # Alternative option - authentication via credentials json
   # - id: 'auth'
   #   uses: 'google-github-actions/auth@v0'
    #  with:
     #   credentials_json: kubernetestutorial-338511-be64262094ec.json

    # Setup gcloud CLI
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v0
    - name: 'Use gcloud CLI'
      run: 'gcloud info'
    - name: Build
      run: |-
        docker build \
          --tag "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .

    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
        docker push "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"

    # Set up kustomize
    - name: Set up Kustomize
      run: |-
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize

    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |-
        ./kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA
        ./kustomize build . | kubectl apply -f -
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl get services -o wide

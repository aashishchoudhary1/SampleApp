name: Spring Boot CI/CD Pipeline for Azure AKS

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  # DockerHub configuration
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
  DOCKER_HUB_REPOSITORY: ${{ secrets.DOCKER_HUB_REPOSITORY }}
  # Azure configuration
  AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
  AKS_CLUSTER_NAME: ${{ secrets.AKS_CLUSTER_NAME }}
  AKS_RESOURCE_GROUP: ${{ secrets.AKS_RESOURCE_GROUP }}
  # Application configuration
  IMAGE_NAME: spring-boot-app
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
      
    - name: Build with Maven
      run: mvn clean package -DskipTests
      
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ env.DOCKER_HUB_USERNAME }}
        password: ${{ env.DOCKER_HUB_PASSWORD }}
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ env.DOCKER_HUB_USERNAME }}/${{ env.DOCKER_HUB_REPOSITORY }}:${{ env.IMAGE_TAG }},${{ env.DOCKER_HUB_USERNAME }}/${{ env.DOCKER_HUB_REPOSITORY }}:latest
        
    - name: Install kubectl
      uses: azure/setup-kubectl@v3
      
    - name: Set up Azure credentials
      uses: azure/login@v1
      with:
        creds: ${{ env.AZURE_CREDENTIALS }}
        
    - name: Set AKS context
      uses: azure/aks-set-context@v3
      with:
        resource-group: ${{ env.AKS_RESOURCE_GROUP }}
        cluster-name: ${{ env.AKS_CLUSTER_NAME }}
        
    - name: Create Kubernetes deployment file
      run: |
        cat > deployment.yaml << EOF
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: spring-boot-app
        spec:
          replicas: 2
          selector:
            matchLabels:
              app: spring-boot-app
          template:
            metadata:
              labels:
                app: spring-boot-app
            spec:
              containers:
              - name: spring-boot-app
                image: ${{ env.DOCKER_HUB_USERNAME }}/${{ env.DOCKER_HUB_REPOSITORY }}:${{ env.IMAGE_TAG }}
                ports:
                - containerPort: 8080
        ---
        apiVersion: v1
        kind: Service
        metadata:
          name: spring-boot-app
        spec:
          type: LoadBalancer
          ports:
          - port: 80
            targetPort: 8080
          selector:
            app: spring-boot-app
        EOF
        
    - name: Deploy to AKS
      run: kubectl apply -f deployment.yaml
      
    - name: Verify deployment
      run: kubectl get services,deployments
